/*
 * Test New API Implementations
 * Tests the partially implemented/stub APIs we just implemented
 */

var appName: "API Test Suite";

function testDisplayAPIs(): void {
    os.console.println("=== Testing Display APIs ===");
    
    // Test display.setTitle()
    os.display.setTitle(appName);
    os.console.println("[OK] Set display title");
    
    // Test display.getSize()
    var size: os.display.getSize();
    os.console.println(`[OK] Display size: ${size.width}x${size.height}`);
    
    // Test display.drawImage() with a simple 2x2 red square
    var imageData: [
        0, 2,    // width = 2
        0, 2,    // height = 2
        0xF8, 0x00,  // Red pixel (RGB565)
        0xF8, 0x00,  // Red pixel
        0xF8, 0x00,  // Red pixel
        0xF8, 0x00   // Red pixel
    ];
    os.display.drawImage(50, 50, imageData);
    os.console.println("[OK] Drew test image");
}

function testTouchAPIs(): void {
    os.console.println("=== Testing Touch APIs ===");
    
    // Test touch.getPosition()
    var pos: os.touch.getPosition();
    os.console.println(`[OK] Touch position: (${pos.x}, ${pos.y}), pressed: ${pos.pressed}`);
    
    // Test touch.isPressed()
    var pressed: os.touch.isPressed();
    os.console.println(`[OK] Touch pressed: ${pressed}`);
}

function testSystemAPIs(): void {
    os.console.println("=== Testing System APIs ===");
    
    // Test system.getRTC()
    var rtcTime: os.system.getRTC();
    os.console.println(`[OK] RTC time: ${rtcTime}`);
    
    // Test system.setRTC() and verify
    var newTime: rtcTime + 3600; // Add 1 hour
    os.system.setRTC(newTime);
    var readBack: os.system.getRTC();
    os.console.println(`[OK] Set RTC to ${newTime}, read back: ${readBack}`);
}

function testRFIDAPIs(): void {
    os.console.println("=== Testing RFID APIs ===");
    
    // Test rfid.isPresent()
    var present: os.rfid.isPresent();
    os.console.println(`[OK] RFID card present: ${present}`);
    
    // Test rfid.read()
    var uid: os.rfid.read();
    if (uid = "") {
        os.console.println("[OK] No RFID card detected");
    } else {
        os.console.println(`[OK] RFID card UID: ${uid}`);
    }
}

function testPowerAPIs(): void {
    os.console.println("=== Testing Power APIs ===");
    
    // Test power.getBatteryLevel()
    var battery: os.power.getBatteryLevel();
    os.console.println(`[OK] Battery level: ${battery}%`);
    
    // Test power.isCharging()
    var charging: os.power.isCharging();
    os.console.println(`[OK] Charging: ${charging}`);
    
    os.console.println("Note: power.sleep() not tested to avoid stopping the test");
}

function testBuzzerAPIs(): void {
    os.console.println("=== Testing Buzzer APIs ===");
    
    // Test buzzer.playMelody() with a simple tune
    // Use direct array literal instead of dynamic array
    var melody: [440, 250, 0, 100, 523, 250, 0, 100, 659, 500];
    
    os.console.println("Playing melody with 5 notes...");
    os.buzzer.playMelody(melody);
    os.console.println("[OK] Played test melody");
}

function main(): void {
    os.display.clear(0x0000); // Black background
    os.display.drawText(80, 120, appName, 0xFFFF, 2);
    
    os.console.println("Starting API test suite...");
    os.console.println("");
    
    testDisplayAPIs();
    os.system.sleep(500);
    
    testTouchAPIs();
    os.system.sleep(500);
    
    testSystemAPIs();
    os.system.sleep(500);
    
    testRFIDAPIs();
    os.system.sleep(500);
    
    testPowerAPIs();
    os.system.sleep(500);
    
    testBuzzerAPIs();
    os.system.sleep(500);
    
    os.console.println("");
    os.console.println("=== API Test Suite Complete ===");
    os.console.println("All APIs tested successfully!");
    
    // Draw success message on display
    os.display.drawText(80, 100, "API Tests", 0x07E0, 2); // Green text
    os.display.drawText(80, 120, "Complete!", 0x07E0, 2);
}

function countdown(): void {
    os.console.println("API Test Suite will start in:");
    
    for (var i: 10; i > 0; assign i i - 1) {
        os.console.println(`${i}...`);
        os.display.clear(0x0000); // Black background
        os.display.drawText(80, 100, `Starting in: ${i}`, 0xFFFF, 2);
        os.system.sleep(1000); // Wait 1 second
    }
    
    os.console.println("Starting now!");
    os.display.clear(0x0000);
}

// Start with countdown, then run the test
countdown();
main();