class Coordinate{
    x: int;
    y: int;

    constructor(x:int,y:int){
        assign this.x x;
        assign this.y y;
    }

    toString(): string{
        return `(${this.x}:${this.y})`;
    }
}

os.console.println("lala " + " lolo");

// Create objects once outside the loop to avoid memory leaks
var p1: Coordinate(80,100);
var p2: Coordinate(100,80);

os.console.println("Initial objects created:");
os.console.println(`used ${os.memory.getUsage()} bytes over ${os.memory.getAvailable()} bytes`);

for (var i: 10; i > 0; assign i i - 1) {
    // No new objects created here - memory should remain stable
    os.console.println(`Iteration ${11 - i}: used ${os.memory.getUsage()} bytes over ${os.memory.getAvailable()} bytes`);
    os.system.sleep(1000); // Wait 1 second
}

os.console.println("Loop complete - final memory:");
os.console.println(`used ${os.memory.getUsage()} bytes over ${os.memory.getAvailable()} bytes`);