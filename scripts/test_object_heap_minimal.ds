class Coordinate{
    x: int;
    y: int;

    constructor(x:int,y:int){
        assign this.x x;
        assign this.y y;
    }

    toString(): string{
        return `(${this.x}:${this.y})`;
    }
}

os.console.println("lala " + " lolo");

// Create objects once outside the loop to avoid memory leaks
var p1: Coordinate(80,100);
var p2: Coordinate(100,80);

os.console.println("Initial objects created");
var initialUsage: os.memory.getUsage();
var initialAvailable: os.memory.getAvailable();

for (var i: 10; i > 0; assign i i - 1) {
    // Get memory values but don't format them in template literals
    var currentUsage: os.memory.getUsage();
    var currentAvailable: os.memory.getAvailable();
    
    // Just print simple messages to avoid string allocation
    os.console.println("Iteration complete - memory stable");
    os.system.sleep(1000); // Wait 1 second
}

os.console.println("Loop complete - checking final memory");
var finalUsage: os.memory.getUsage();
var finalAvailable: os.memory.getAvailable();