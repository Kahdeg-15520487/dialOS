#pragma once

// Generated bytecode arrays from dialScript (.ds) files

// Generated bytecode array from J:\workspace2\arduino\dialOS\scripts\hello_world.ds
// Total size: 105 bytes

const unsigned char HELLO_WORLD[] = {
    0x44, 0x53, 0x42, 0x43, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x08, 0x00, 0x75, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x64, 0x05, 0x00,
    0x31, 0x2e, 0x30, 0x2e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x0b, 0x00, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77,
    0x6f, 0x72, 0x6c, 0x64, 0x07, 0x00, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
    0x65, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x6f, 0x73, 0x01, 0x00, 0x00,
    0x00, 0x03, 0x00, 0x6c, 0x6f, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x90, 0x01, 0x00, 0x81, 0x00, 0x00, 0x01, 0x01, 0xff
};

const unsigned int HELLO_WORLD_SIZE = 105;

// Generated bytecode array from C:\Users\mnguyen\Documents\workspace\dialOS\scripts\counter_applet.ds
// Total size: 113 bytes

const unsigned char COUNTER_APPLET[] = {
    0x44, 0x53, 0x42, 0x43, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x08, 0x00, 0x75, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x64, 0x05, 0x00,
    0x31, 0x2e, 0x30, 0x2e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x07, 0x00, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
    0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x02,
    0x00, 0x6f, 0x73, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x6c, 0x6f, 0x67,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
    0x13, 0x00, 0x31, 0x00, 0x00, 0x30, 0x00, 0x00, 0x13, 0x01, 0x40, 0x31,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0x01, 0x00, 0x90, 0x00, 0x00, 0x81,
    0x00, 0x00, 0x01, 0x01, 0xff
};

const unsigned int COUNTER_APPLET_SIZE = 113;

// Generated bytecode array from C:\Users\mnguyen\Documents\workspace\dialOS\scripts\timer.ds
// Total size: 1414 bytes

const unsigned char TIMER[] = {
    0x44, 0x53, 0x42, 0x43, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x08, 0x00, 0x75, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x64, 0x05, 0x00,
    0x31, 0x2e, 0x30, 0x2e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
    0x00, 0x00, 0x00, 0x07, 0x00, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
    0x06, 0x00, 0x62, 0x75, 0x7a, 0x7a, 0x65, 0x72, 0x07, 0x00, 0x73, 0x65,
    0x63, 0x6f, 0x6e, 0x64, 0x73, 0x06, 0x00, 0x73, 0x79, 0x73, 0x74, 0x65,
    0x6d, 0x07, 0x00, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x05, 0x00,
    0x74, 0x69, 0x6d, 0x65, 0x72, 0x05, 0x00, 0x54, 0x69, 0x6d, 0x65, 0x72,
    0x0c, 0x00, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x6c,
    0x61, 0x79, 0x07, 0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x01,
    0x00, 0x3a, 0x01, 0x00, 0x30, 0x00, 0x00, 0x07, 0x00, 0x52, 0x75, 0x6e,
    0x6e, 0x69, 0x6e, 0x67, 0x06, 0x00, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64,
    0x06, 0x00, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x10, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x02, 0x00, 0x6f, 0x73, 0x07,
    0x00, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x07, 0x00, 0x6e, 0x65,
    0x77, 0x54, 0x69, 0x6d, 0x65, 0x03, 0x00, 0x6e, 0x6f, 0x77, 0x08, 0x00,
    0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x13, 0x00, 0x68, 0x61,
    0x6e, 0x64, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x42,
    0x75, 0x74, 0x74, 0x6f, 0x6e, 0x11, 0x00, 0x68, 0x61, 0x6e, 0x64, 0x6c,
    0x65, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x54, 0x75, 0x72, 0x6e,
    0x0f, 0x00, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
    0x72, 0x54, 0x69, 0x63, 0x6b, 0x04, 0x00, 0x6d, 0x69, 0x6e, 0x73, 0x04,
    0x00, 0x73, 0x65, 0x63, 0x73, 0x07, 0x00, 0x74, 0x69, 0x6d, 0x65, 0x53,
    0x74, 0x72, 0x05, 0x00, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x06, 0x00, 0x73,
    0x74, 0x61, 0x74, 0x75, 0x73, 0x09, 0x00, 0x61, 0x70, 0x70, 0x4f, 0x6e,
    0x4c, 0x6f, 0x61, 0x64, 0x03, 0x00, 0x61, 0x70, 0x70, 0x19, 0x00, 0x00,
    0x00, 0x13, 0x00, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x45, 0x6e, 0x63,
    0x6f, 0x64, 0x65, 0x72, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x00, 0x00,
    0x00, 0x00, 0x04, 0x00, 0x73, 0x74, 0x6f, 0x70, 0x00, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x62, 0x65, 0x65, 0x70, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00,
    0x73, 0x74, 0x61, 0x72, 0x74, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x72,
    0x65, 0x6e, 0x64, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x68,
    0x61, 0x6e, 0x64, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72,
    0x54, 0x75, 0x72, 0x6e, 0x4a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x72, 0x65,
    0x73, 0x65, 0x74, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x68, 0x61, 0x6e,
    0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b,
    0x97, 0x00, 0x00, 0x00, 0x07, 0x00, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d,
    0x65, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x74, 0x69, 0x63, 0x6b, 0x00,
    0x00, 0x00, 0x00, 0x0a, 0x00, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73,
    0x68, 0x65, 0x64, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x61, 0x70, 0x70,
    0x4f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0xf8, 0x00, 0x00, 0x00, 0x08, 0x00,
    0x6f, 0x6e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00,
    0x06, 0x00, 0x6f, 0x6e, 0x54, 0x75, 0x72, 0x6e, 0x00, 0x00, 0x00, 0x00,
    0x0b, 0x00, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
    0x6c, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x54, 0x69, 0x6d, 0x65, 0x72,
    0x3a, 0x3a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
    0x72, 0x2e, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x54, 0x69, 0x6d, 0x65, 0x72,
    0x3a, 0x3a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x3d, 0x01, 0x00, 0x00, 0x0b,
    0x00, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x3a, 0x3a, 0x73, 0x74, 0x6f, 0x70,
    0x45, 0x01, 0x00, 0x00, 0x0b, 0x00, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x3a,
    0x3a, 0x74, 0x69, 0x63, 0x6b, 0x4d, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x54,
    0x69, 0x6d, 0x65, 0x72, 0x3a, 0x3a, 0x72, 0x65, 0x73, 0x65, 0x74, 0x6f,
    0x01, 0x00, 0x00, 0x11, 0x00, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x3a, 0x3a,
    0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x7e, 0x01,
    0x00, 0x00, 0x19, 0x00, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x69, 0x73,
    0x70, 0x6c, 0x61, 0x79, 0x3a, 0x3a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
    0x75, 0x63, 0x74, 0x6f, 0x72, 0x89, 0x01, 0x00, 0x00, 0x14, 0x00, 0x54,
    0x69, 0x6d, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x3a,
    0x3a, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x92, 0x01, 0x00, 0x00, 0x05,
    0x00, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
    0x64, 0x72, 0x61, 0x77, 0x54, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00, 0x00,
    0x82, 0x02, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0x30, 0x00, 0x00, 0x90,
    0x00, 0x00, 0x72, 0x1d, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x80, 0x01,
    0x00, 0x00, 0x01, 0x14, 0xb8, 0x01, 0x13, 0x32, 0x30, 0x01, 0x00, 0x90,
    0x01, 0x00, 0x81, 0x02, 0x00, 0x02, 0x01, 0x70, 0x18, 0x00, 0x00, 0x00,
    0x30, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x01, 0x14, 0x70, 0x03, 0x13,
    0x32, 0x30, 0x01, 0x00, 0x90, 0x01, 0x00, 0x81, 0x02, 0x00, 0x02, 0x01,
    0x30, 0x02, 0x00, 0x80, 0x04, 0x00, 0x00, 0x01, 0x10, 0x82, 0x30, 0x00,
    0x00, 0x90, 0x00, 0x00, 0x60, 0x72, 0x3f, 0x00, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x90, 0x02, 0x00, 0x40, 0x31, 0x03, 0x00, 0x30, 0x03, 0x00, 0x13,
    0x00, 0x52, 0x72, 0x05, 0x00, 0x00, 0x00, 0x13, 0x00, 0x31, 0x03, 0x00,
    0x30, 0x03, 0x00, 0x14, 0x10, 0x0e, 0x54, 0x72, 0x06, 0x00, 0x00, 0x00,
    0x14, 0x10, 0x0e, 0x31, 0x03, 0x00, 0x30, 0x03, 0x00, 0x30, 0x00, 0x00,
    0x80, 0x06, 0x00, 0x01, 0x01, 0x30, 0x02, 0x00, 0x80, 0x04, 0x00, 0x00,
    0x01, 0x10, 0x82, 0x30, 0x01, 0x00, 0x90, 0x03, 0x00, 0x81, 0x08, 0x00,
    0x00, 0x31, 0x04, 0x00, 0x30, 0x04, 0x00, 0x30, 0x05, 0x00, 0x41, 0x14,
    0xe8, 0x03, 0x55, 0x72, 0x42, 0x00, 0x00, 0x00, 0x30, 0x04, 0x00, 0x31,
    0x05, 0x00, 0x30, 0x00, 0x00, 0x80, 0x09, 0x00, 0x00, 0x01, 0x30, 0x02,
    0x00, 0x80, 0x04, 0x00, 0x00, 0x01, 0x30, 0x00, 0x00, 0x80, 0x0a, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x90, 0x00, 0x00, 0x61, 0x72, 0x19, 0x00, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x01, 0x14, 0x70, 0x03,
    0x14, 0xf4, 0x01, 0x30, 0x01, 0x00, 0x90, 0x01, 0x00, 0x81, 0x02, 0x00,
    0x02, 0x01, 0x10, 0x82, 0x30, 0x02, 0x00, 0x80, 0x04, 0x00, 0x00, 0x01,
    0x30, 0x06, 0x00, 0x30, 0x01, 0x00, 0x90, 0x04, 0x00, 0x81, 0x0c, 0x00,
    0x01, 0x01, 0x30, 0x07, 0x00, 0x30, 0x01, 0x00, 0x90, 0x04, 0x00, 0x81,
    0x0d, 0x00, 0x01, 0x01, 0x30, 0x08, 0x00, 0x13, 0x64, 0x30, 0x01, 0x00,
    0x90, 0x05, 0x00, 0x81, 0x0e, 0x00, 0x02, 0x01, 0x10, 0x82, 0x20, 0x01,
    0x20, 0x00, 0x91, 0x02, 0x00, 0x12, 0x20, 0x00, 0x91, 0x00, 0x00, 0x10,
    0x82, 0x12, 0x20, 0x00, 0x91, 0x00, 0x00, 0x10, 0x82, 0x12, 0x20, 0x00,
    0x91, 0x00, 0x00, 0x10, 0x82, 0x20, 0x00, 0x90, 0x00, 0x00, 0x20, 0x00,
    0x90, 0x02, 0x00, 0x13, 0x00, 0x54, 0x61, 0x72, 0x0d, 0x00, 0x00, 0x00,
    0x20, 0x00, 0x90, 0x02, 0x00, 0x13, 0x01, 0x41, 0x20, 0x00, 0x91, 0x02,
    0x00, 0x10, 0x82, 0x20, 0x01, 0x20, 0x00, 0x91, 0x02, 0x00, 0x12, 0x20,
    0x00, 0x91, 0x00, 0x00, 0x10, 0x82, 0x20, 0x00, 0x90, 0x02, 0x00, 0x13,
    0x00, 0x50, 0x82, 0x10, 0x82, 0x20, 0x01, 0x20, 0x00, 0x91, 0x05, 0x00,
    0x10, 0x82, 0x15, 0x00, 0x00, 0x00, 0x00, 0x30, 0x01, 0x00, 0x90, 0x08,
    0x00, 0x81, 0x17, 0x00, 0x01, 0x01, 0x13, 0x46, 0x13, 0x28, 0x17, 0x06,
    0x00, 0x15, 0xff, 0xff, 0x00, 0x00, 0x13, 0x02, 0x30, 0x01, 0x00, 0x90,
    0x08, 0x00, 0x81, 0x18, 0x00, 0x05, 0x01, 0x20, 0x00, 0x90, 0x05, 0x00,
    0x90, 0x02, 0x00, 0x13, 0x3c, 0x43, 0x31, 0x09, 0x00, 0x20, 0x00, 0x90,
    0x05, 0x00, 0x90, 0x02, 0x00, 0x13, 0x3c, 0x44, 0x31, 0x0a, 0x00, 0x30,
    0x09, 0x00, 0x17, 0x09, 0x00, 0x46, 0x30, 0x0a, 0x00, 0x13, 0x0a, 0x52,
    0x72, 0x08, 0x00, 0x00, 0x00, 0x17, 0x0a, 0x00, 0x70, 0x03, 0x00, 0x00,
    0x00, 0x17, 0x0b, 0x00, 0x46, 0x30, 0x0a, 0x00, 0x46, 0x31, 0x0b, 0x00,
    0x15, 0xff, 0xff, 0x00, 0x00, 0x31, 0x0c, 0x00, 0x20, 0x00, 0x90, 0x05,
    0x00, 0x90, 0x00, 0x00, 0x72, 0x0d, 0x00, 0x00, 0x00, 0x15, 0xe0, 0x07,
    0x00, 0x00, 0x31, 0x0c, 0x00, 0x70, 0x16, 0x00, 0x00, 0x00, 0x20, 0x00,
    0x90, 0x05, 0x00, 0x80, 0x0a, 0x00, 0x00, 0x72, 0x08, 0x00, 0x00, 0x00,
    0x15, 0x00, 0xf8, 0x00, 0x00, 0x31, 0x0c, 0x00, 0x13, 0x3c, 0x13, 0x6e,
    0x30, 0x0b, 0x00, 0x30, 0x0c, 0x00, 0x13, 0x03, 0x30, 0x01, 0x00, 0x90,
    0x08, 0x00, 0x81, 0x18, 0x00, 0x05, 0x01, 0x20, 0x00, 0x90, 0x05, 0x00,
    0x90, 0x00, 0x00, 0x72, 0x08, 0x00, 0x00, 0x00, 0x17, 0x0c, 0x00, 0x70,
    0x03, 0x00, 0x00, 0x00, 0x17, 0x0d, 0x00, 0x31, 0x0d, 0x00, 0x13, 0x50,
    0x14, 0xb4, 0x00, 0x30, 0x0d, 0x00, 0x15, 0xef, 0x7b, 0x00, 0x00, 0x13,
    0x01, 0x30, 0x01, 0x00, 0x90, 0x08, 0x00, 0x81, 0x18, 0x00, 0x05, 0x01,
    0x10, 0x82, 0x13, 0x3c, 0xa0, 0x06, 0x00, 0x31, 0x00, 0x00, 0x30, 0x00,
    0x00, 0xa0, 0x07, 0x00, 0x31, 0x02, 0x00, 0x13, 0x00, 0x31, 0x05, 0x00,
    0x30, 0x0e, 0x00, 0x30, 0x0f, 0x00, 0x91, 0x0e, 0x00, 0xff
};

const unsigned int TIMER_SIZE = 1414;



// Generated bytecode array from C:\Users\mnguyen\Documents\workspace\dialOS\scripts\test_expressions.ds
// Total size: 447 bytes

const unsigned char TEST_EXPRESSIONS[] = {
    0x44, 0x53, 0x42, 0x43, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x08, 0x00, 0x75, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x64, 0x05, 0x00,
    0x31, 0x2e, 0x30, 0x2e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x05, 0x00, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x07, 0x00,
    0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x01, 0x00, 0x3a, 0x01, 0x00,
    0x30, 0x00, 0x00, 0x04, 0x00, 0x68, 0x69, 0x67, 0x68, 0x06, 0x00, 0x6d,
    0x65, 0x64, 0x69, 0x75, 0x6d, 0x03, 0x00, 0x6c, 0x6f, 0x77, 0x0d, 0x00,
    0x00, 0x00, 0x03, 0x00, 0x73, 0x75, 0x6d, 0x07, 0x00, 0x70, 0x72, 0x6f,
    0x64, 0x75, 0x63, 0x74, 0x06, 0x00, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
    0x03, 0x00, 0x6d, 0x61, 0x78, 0x03, 0x00, 0x6d, 0x69, 0x6e, 0x07, 0x00,
    0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x07, 0x00, 0x73, 0x65, 0x63,
    0x6f, 0x6e, 0x64, 0x73, 0x09, 0x00, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
    0x74, 0x65, 0x64, 0x06, 0x00, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x05,
    0x00, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x04, 0x00, 0x6d, 0x69, 0x6e, 0x73,
    0x04, 0x00, 0x73, 0x65, 0x63, 0x73, 0x07, 0x00, 0x74, 0x69, 0x6d, 0x65,
    0x53, 0x74, 0x72, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x54, 0x69, 0x6d,
    0x65, 0x72, 0x3a, 0x3a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
    0x74, 0x6f, 0x72, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0xe4,
    0x00, 0x00, 0x00, 0x20, 0x01, 0x20, 0x00, 0x91, 0x01, 0x00, 0x10, 0x82,
    0x13, 0x0a, 0x13, 0x14, 0x40, 0x31, 0x00, 0x00, 0x13, 0x05, 0x13, 0x06,
    0x42, 0x31, 0x01, 0x00, 0x30, 0x00, 0x00, 0x30, 0x01, 0x00, 0x43, 0x31,
    0x02, 0x00, 0x72, 0x08, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x70, 0x03,
    0x00, 0x00, 0x00, 0x30, 0x01, 0x00, 0x31, 0x03, 0x00, 0x72, 0x08, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x70, 0x03, 0x00, 0x00, 0x00, 0x30, 0x01,
    0x00, 0x31, 0x04, 0x00, 0x13, 0x78, 0x13, 0x3c, 0x43, 0x31, 0x05, 0x00,
    0x13, 0x78, 0x13, 0x3c, 0x44, 0x31, 0x06, 0x00, 0x30, 0x05, 0x00, 0x17,
    0x02, 0x00, 0x46, 0x30, 0x06, 0x00, 0x13, 0x0a, 0x52, 0x72, 0x08, 0x00,
    0x00, 0x00, 0x17, 0x03, 0x00, 0x70, 0x03, 0x00, 0x00, 0x00, 0x17, 0x04,
    0x00, 0x46, 0x30, 0x06, 0x00, 0x46, 0x31, 0x07, 0x00, 0x72, 0x08, 0x00,
    0x00, 0x00, 0x17, 0x05, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x72, 0x08,
    0x00, 0x00, 0x00, 0x17, 0x06, 0x00, 0x70, 0x03, 0x00, 0x00, 0x00, 0x17,
    0x07, 0x00, 0x31, 0x08, 0x00, 0x13, 0x78, 0xa0, 0x00, 0x00, 0x31, 0x09,
    0x00, 0x30, 0x09, 0x00, 0x90, 0x01, 0x00, 0x13, 0x3c, 0x43, 0x31, 0x0a,
    0x00, 0x30, 0x09, 0x00, 0x90, 0x01, 0x00, 0x13, 0x3c, 0x44, 0x31, 0x0b,
    0x00, 0x30, 0x0a, 0x00, 0x17, 0x02, 0x00, 0x46, 0x30, 0x0b, 0x00, 0x13,
    0x0a, 0x52, 0x72, 0x08, 0x00, 0x00, 0x00, 0x17, 0x03, 0x00, 0x70, 0x03,
    0x00, 0x00, 0x00, 0x17, 0x04, 0x00, 0x46, 0x30, 0x0b, 0x00, 0x46, 0x31,
    0x0c, 0x00, 0xff
};

const unsigned int TEST_EXPRESSIONS_SIZE = 447;

// ===================== Applet Registry =====================
// This section is auto-generated - do not edit manually

struct VMApplet {
  const char *name;
  const unsigned char *bytecode;
  size_t bytecodeSize;
  uint32_t executeInterval;  // ms between executions (0 = run once)
  bool repeat;               // true = repeat indefinitely, false = run once
};
static VMApplet APPLET_REGISTRY[] = {
    {"hello_world", HELLO_WORLD, HELLO_WORLD_SIZE, 2000, true},
    {"counter_applet", COUNTER_APPLET, COUNTER_APPLET_SIZE, 2000, true},
    {"timer", TIMER, TIMER_SIZE, 2000, true},
    {"test_expressions", TEST_EXPRESSIONS, TEST_EXPRESSIONS_SIZE, 2000, true},
};

static const int APPLET_REGISTRY_SIZE = sizeof(APPLET_REGISTRY) / sizeof(VMApplet);
// ===================== End Registry =====================